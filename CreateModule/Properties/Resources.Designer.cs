//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CreateModule.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CreateModule.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Module {0} successfully created!.
        /// </summary>
        internal static string asd {
            get {
                return ResourceManager.GetString("asd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;?php
        ///
        ///namespace $moduleName$;
        ///
        ///use Zend\Router\Http\Segment;
        ///use Zend\ServiceManager\Factory\InvokableFactory;
        ///
        ///return [
        ///    &apos;router&apos; =&gt; [
        ///        &apos;routes&apos; =&gt; [
        ///            &apos;$moduleUrl$&apos; =&gt; [
        ///                &apos;type&apos;    =&gt; Segment::class,
        ///                &apos;options&apos; =&gt; [
        ///                    &apos;route&apos;    =&gt; &apos;/$moduleUrl$[/:action][/:id]&apos;,
        ///                    &apos;constraints&apos; =&gt; [
        ///                        &apos;action&apos; =&gt; &apos;[a-zA-Z][a-zA-Z0-9_-]*&apos;,
        ///                        &apos;id&apos;     =&gt; &apos;[0-9]+&apos;,
        ///              [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string configTemplate {
            get {
                return ResourceManager.GetString("configTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;?php
        ///
        ///namespace $moduleName$\Controller;
        ///
        ///use Zend\Mvc\Controller\AbstractActionController;
        ///use Zend\View\Model\ViewModel;
        ///
        ///class $moduleName$Controller extends AbstractActionController
        ///{
        ///    public function indexAction()
        ///    {
        ///        return new ViewModel();
        ///    }
        ///
        ///}.
        /// </summary>
        internal static string controllerTemplate {
            get {
                return ResourceManager.GetString("controllerTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;?php
        ///namespace $moduleName$;
        ///
        ///class Module
        ///{
        ///    const VERSION = &apos;3.0.2dev&apos;;
        ///
        ///    public function getConfig()
        ///    {
        ///        return include __DIR__ . &apos;/../config/module.config.php&apos;;
        ///    }
        ///}.
        /// </summary>
        internal static string srcConfigTemplate {
            get {
                return ResourceManager.GetString("srcConfigTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;h2&gt;$moduleName$ index&lt;/h2&gt;.
        /// </summary>
        internal static string viewTemplate {
            get {
                return ResourceManager.GetString("viewTemplate", resourceCulture);
            }
        }
    }
}
